Index: include/llvm/CallingConv.h
===================================================================
--- include/llvm/CallingConv.h  (revisión: 169957)
+++ include/llvm/CallingConv.h  (copia de trabajo)
@@ -119,8 +119,13 @@
     SPIR_KERNEL = 76,

     /// Intel_OCL_BI - Calling conventions for Intel OpenCL built-ins
-    Intel_OCL_BI = 77
+    Intel_OCL_BI = 77,

+    /// AVR_INTR - Calling convention used for AVR interrupt routines.
+    AVR_INTR = 78,
+
+    /// AVR_SIGNAL - Calling convention used for AVR signal routines.
+    AVR_SIGNAL = 79
   };
 } // End CallingConv namespace

Index: lib/VMCore/AsmWriter.cpp
===================================================================
--- lib/VMCore/AsmWriter.cpp    (revisión: 169957)
+++ lib/VMCore/AsmWriter.cpp    (copia de trabajo)
@@ -79,6 +79,8 @@
     case CallingConv::ARM_AAPCS:    Out << "arm_aapcscc"; break;
     case CallingConv::ARM_AAPCS_VFP:Out << "arm_aapcs_vfpcc"; break;
     case CallingConv::MSP430_INTR:  Out << "msp430_intrcc"; break;
+    case CallingConv::AVR_INTR:     Out << "avr_intrcc "; break;
+    case CallingConv::AVR_SIGNAL:   Out << "avr_signalcc "; break;
     case CallingConv::PTX_Kernel:   Out << "ptx_kernel"; break;
     case CallingConv::PTX_Device:   Out << "ptx_device"; break;
     default:                        Out << "cc" << cc; break;
Index: lib/AsmParser/LLParser.cpp
===================================================================
--- lib/AsmParser/LLParser.cpp  (revisión: 169957)
+++ lib/AsmParser/LLParser.cpp  (copia de trabajo)
@@ -1141,6 +1141,8 @@
 ///   ::= 'arm_aapcscc'
 ///   ::= 'arm_aapcs_vfpcc'
 ///   ::= 'msp430_intrcc'
+///   ::= 'avr_intrcc'
+///   ::= 'avr_signalcc'
 ///   ::= 'ptx_kernel'
 ///   ::= 'ptx_device'
 ///   ::= 'spir_func'
@@ -1160,6 +1162,8 @@
   case lltok::kw_arm_aapcscc:    CC = CallingConv::ARM_AAPCS; break;
   case lltok::kw_arm_aapcs_vfpcc:CC = CallingConv::ARM_AAPCS_VFP; break;
   case lltok::kw_msp430_intrcc:  CC = CallingConv::MSP430_INTR; break;
+  case lltok::kw_avr_intrcc:     CC = CallingConv::AVR_INTR; break;
+  case lltok::kw_avr_signalcc:   CC = CallingConv::AVR_SIGNAL; break;
   case lltok::kw_ptx_kernel:     CC = CallingConv::PTX_Kernel; break;
   case lltok::kw_ptx_device:     CC = CallingConv::PTX_Device; break;
   case lltok::kw_spir_kernel:    CC = CallingConv::SPIR_KERNEL; break;
Index: lib/AsmParser/LLLexer.cpp
===================================================================
--- lib/AsmParser/LLLexer.cpp   (revisión: 169957)
+++ lib/AsmParser/LLLexer.cpp   (copia de trabajo)
@@ -528,6 +528,8 @@
   KEYWORD(arm_aapcscc);
   KEYWORD(arm_aapcs_vfpcc);
   KEYWORD(msp430_intrcc);
+  KEYWORD(avr_intrcc);
+  KEYWORD(avr_signalcc);
   KEYWORD(ptx_kernel);
   KEYWORD(ptx_device);
   KEYWORD(spir_kernel);
Index: lib/AsmParser/LLToken.h
===================================================================
--- lib/AsmParser/LLToken.h     (revisión: 169957)
+++ lib/AsmParser/LLToken.h     (copia de trabajo)
@@ -86,6 +86,8 @@
     kw_x86_stdcallcc, kw_x86_fastcallcc, kw_x86_thiscallcc,
     kw_arm_apcscc, kw_arm_aapcscc, kw_arm_aapcs_vfpcc,
     kw_msp430_intrcc,
+    kw_avr_intrcc,
+    kw_avr_signalcc,
     kw_ptx_kernel, kw_ptx_device,
     kw_spir_kernel, kw_spir_func,
 
