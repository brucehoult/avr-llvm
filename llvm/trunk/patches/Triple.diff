Index: include/llvm/ADT/Triple.h
===================================================================
--- include/llvm/ADT/Triple.h   (revisión: 169957)
+++ include/llvm/ADT/Triple.h   (copia de trabajo)
@@ -44,6 +44,7 @@
     UnknownArch,

     arm,     // ARM; arm, armv.*, xscale
+    avr,     // AVR: avr
     hexagon, // Hexagon: hexagon
     mips,    // MIPS: mips, mipsallegrex
     mipsel,  // MIPSEL: mipsel, mipsallegrexel
@@ -72,6 +73,7 @@
     UnknownVendor,

     Apple,
+    Atmel,
     PC,
     SCEI,
     BGP,
Index: lib/Support/Triple.cpp
===================================================================
--- lib/Support/Triple.cpp      (revisión: 169957)
+++ lib/Support/Triple.cpp      (copia de trabajo)
@@ -20,6 +20,7 @@
   case UnknownArch: return "unknown";

   case arm:     return "arm";
+  case avr:     return "avr";
   case hexagon: return "hexagon";
   case mips:    return "mips";
   case mipsel:  return "mipsel";
@@ -56,6 +57,8 @@
   case arm:
   case thumb:   return "arm";

+  case avr:     return "avr";
+
   case ppc64:
   case ppc:     return "ppc";

@@ -92,6 +95,7 @@
   case UnknownVendor: return "unknown";

   case Apple: return "apple";
+  case Atmel: return "atmel";
   case PC: return "pc";
   case SCEI: return "scei";
   case BGP: return "bgp";
@@ -152,6 +156,7 @@
 Triple::ArchType Triple::getArchTypeForLLVMName(StringRef Name) {
   return StringSwitch<Triple::ArchType>(Name)
     .Case("arm", arm)
+    .Case("avr", avr)
     .Case("mips", mips)
     .Case("mipsel", mipsel)
     .Case("mips64", mips64)
@@ -195,6 +200,7 @@
     .Cases("armv5", "armv5e", "thumbv5", "thumbv5e", "armv5")
     .Cases("armv6", "thumbv6", "armv6")
     .Cases("armv7", "thumbv7", "armv7")
+    .Case("avr", "avr")
     .Case("r600", "r600")
     .Case("nvptx", "nvptx")
     .Case("nvptx64", "nvptx64")
@@ -220,6 +226,7 @@
     .StartsWith("armv", Triple::arm)
     .Case("thumb", Triple::thumb)
     .StartsWith("thumbv", Triple::thumb)
+    .Case("avr", Triple::avr)
     .Case("msp430", Triple::msp430)
     .Cases("mips", "mipseb", "mipsallegrex", Triple::mips)
     .Cases("mipsel", "mipsallegrexel", Triple::mipsel)
@@ -243,6 +250,7 @@
 static Triple::VendorType parseVendor(StringRef VendorName) {
   return StringSwitch<Triple::VendorType>(VendorName)
     .Case("apple", Triple::Apple)
+    .Case("atmel", Triple::Atmel)
     .Case("pc", Triple::PC)
     .Case("scei", Triple::SCEI)
     .Case("bgp", Triple::BGP)
@@ -653,6 +661,7 @@
   case llvm::Triple::UnknownArch:
     return 0;

+  case llvm::Triple::avr:
   case llvm::Triple::msp430:
     return 16;

@@ -702,6 +711,7 @@
   Triple T(*this);
   switch (getArch()) {
   case Triple::UnknownArch:
+  case Triple::avr:
   case Triple::msp430:
     T.setArch(UnknownArch);
     break;
@@ -742,6 +752,7 @@
   case Triple::UnknownArch:
   case Triple::amdil:
   case Triple::arm:
+  case Triple::avr:
   case Triple::hexagon:
   case Triple::le32:
   case Triple::mblaze:
