================================================================================
                                AVR LLVM
================================================================================
$Id$
================================================================================

Setup
=====

1. Check out the LLVM trunk (LLVM_SRC_ROOT)
2. Copy the AVR subfolder to LLVM_SRC_ROOT/lib/Target
3. Patch the build system and source files. See patches/README



Build
=====

configure and build LLVM in an empty folder with avr enabled (currently the
avr target is NOT enabled by default):

  % LLVM_SRC_ROOT/configure --prefix=$HOME/usr/avr-llvm/ --disable-optimized --enable-assertions --enable-targets=avr
  % make


Build (CMake)
=====

Run cmake in the directory you want to use as the built directory (LLVM_OBJ_DIR)

    <example:linux>
  This creates the built scripts in the directory LLVM_OBJ_DIR based on
  files in 'llvm' and also makes an Eclipse project file. You can then run
  make from the command line to build or open Eclipse to edit/build.

  % cmake -G"Eclipse CDT4 - Unix Makefiles" -DLLVM_TARGETS_TO_BUILD="AVR"     \
                         -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TOOLS=ON       \
                         -DLLVM_BUILD_EXAMPLES=OFF -DLLVM_ENABLE_THREADS=OFF  \
                         ../llvm


    <example:windows>
  This creates the built scripts in the directory LLVM_OBJ_DIR based on
  files in 'llvm' and also creates a Visual Studio 9 2008 project.

  > cmake -G "Visual Studio 9 2008" -DLLVM_TARGETS_TO_BUILD="AVR" ..\llvm


    <example:windows:msys>
  This creates, from the msys shell, the built scripts in the directory
  LLVM_OBJ_DIR based on files in 'llvm' and also creates an Eclipse project.

  $ cmake -G"Eclipse CDT4 - Unix Makefiles" -DLLVM_TARGETS_TO_BUILD=all -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TOOLS=ON -DLLVM_BUILD_EXAMPLES=OFF


Checkin Rules
=============

- Always perform an svn update in the LLVM_SRC_ROOT __and__ in the avr-llvm target directory before checking in changes
- Ensure that LLVM compiles with the commands above
